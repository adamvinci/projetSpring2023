//If test return 500 or 503 error code, relaunch matching order and then execute wait for each service to start before launching the next one /////////////////////////////////////////

// EXAMPLE 1 from Project description :
### Create sell order
POST http://localhost:9001/order
Content-Type: application/json

{
  "owner": "Alice",
  "ticker": "LNRD",
  "quantity": 5,
  "type": "LIMIT",
  "side": "SELL",
  "limit": 10
}
> {% client.global.set("guidsell", response.body.guid);%}


### Create buy order (create a match in matching)
POST http://localhost:9001/order
Content-Type: application/json

{
  "owner": "Bob",
  "ticker": "LNRD",
  "quantity": 5,
  "type": "LIMIT",
  "side": "BUY",
  "limit": 13
}
> {% client.global.set("guidbuy", response.body.guid);%}

### Execute with good params (will be executed automatically by matching)
POST http://localhost:9002/execute/AAFL/Alice/Bob
Content-Type: application/json

{
  "ticker": "AAFL",
  "seller": "Alice",
  "buyer": "bob",
  "buy_order_guid": "{{guidbuy}}",
  "sell_order_guid": "{{guidsell}}",
  "quantity": 5,
  "price": 11.5
}

### Verify buy order (filled should be 5)
GET http://localhost:9001/order/{{guidbuy}}

### Verify sell order (filled should be 5)
GET http://localhost:9001/order/{{guidsell}}

### Verify that the price has been updated (should be 11.5)
GET http://localhost:9003/price/LNRD

### Verify the buyer position (should be 5 LNRD and (-11.5*5=-57.5) CASH)
GET http://localhost:9005/Bob/all-positions

### Verify the seller position (should be -5 LNRD and (11.5*5 = 57.5) CASH)
GET http://localhost:9005/Alice/all-positions


// EXAMPLE 6 from Project description :
### Create sell order
POST http://localhost:9001/order
Content-Type: application/json

{
  "owner": "Alice",
  "ticker": "LNRD",
  "quantity": 200,
  "type": "LIMIT",
  "side": "SELL",
  "limit": 10
}
> {% client.global.set("guidsell", response.body.guid);%}

### Create buy order
POST http://localhost:9001/order
Content-Type: application/json

{
  "owner": "Bob",
  "ticker": "LNRD",
  "quantity": 50,
  "type": "MARKET",
  "side": "BUY"
}
> {% client.global.set("guidbuyBob", response.body.guid);%}

### Verify bob buy order (filled should be 50)
GET http://localhost:9001/order/{{guidbuyBob}}

### Verify alice sell order (filled should be 50)
GET http://localhost:9001/order/{{guidsell}}

### Create buy order
POST http://localhost:9001/order
Content-Type: application/json

{
  "owner": "Cedric",
  "ticker": "LNRD",
  "quantity": 50,
  "type": "MARKET",
  "side": "BUY"
}
> {% client.global.set("guidbuyCedric", response.body.guid);%}

### Verify Cedric buy order (filled should be 50)
GET http://localhost:9001/order/{{guidbuyCedric}}

### Verify alice sell order (filled should be 100)
GET http://localhost:9001/order/{{guidsell}}

### Create buy order
POST http://localhost:9001/order
Content-Type: application/json

{
  "owner": "Fred",
  "ticker": "LNRD",
  "quantity": 100,
  "type": "LIMIT",
  "side": "BUY",
  "limit": 11
}
> {% client.global.set("guidbuyFred", response.body.guid);%}

### Verify Cedric buy order (filled should be 100)
GET http://localhost:9001/order/{{guidbuyFred}}

### Verify alice sell order (filled should be 200)
GET http://localhost:9001/order/{{guidsell}}

### Verify that the price has been updated (should be 10.5)
GET http://localhost:9003/price/LNRD

--------------------------------------------------------------------BAD_REQUEST TEST----------------------------------------------------------

### Execute with bad seller params
POST http://localhost:9002/execute/AAFL/Cat4Lif/Cat3Life
Content-Type: application/json

{
  "ticker": "AAFL",
  "seller": "Cat4Life",
  "buyer": "Cat3Life",
  "buy_order_guid": "1851aeae-dba9-49f9-a917-4144797c9633",
  "sell_order_guid": "a68b4e2f-6680-4421-9204-ca6b55d008da",
  "quantity": "4",
  "price": "10"
}
### Execute with same buyer and seller
POST http://localhost:9002/execute/AAFL/Cat4Life/Cat4Life
Content-Type: application/json

{
  "ticker": "AAFL",
  "seller": "Cat4Life",
  "buyer": "Cat4Life",
  "buy_order_guid": "1851aeae-dba9-49f9-a917-4144797c9633",
  "sell_order_guid": "a68b4e2f-6680-4421-9204-ca6b55d008da",
  "quantity": "4",
  "price": "10"
}

### Execute with bad buyer params
POST http://localhost:9002/execute/AAFL/Cat4Life/Cat3Lif
Content-Type: application/json

{
  "ticker": "AAFL",
  "seller": "Cat4Life",
  "buyer": "Cat3Life",
  "buy_order_guid": "1851aeae-dba9-49f9-a917-4144797c9633",
  "sell_order_guid": "a68b4e2f-6680-4421-9204-ca6b55d008da",
  "quantity": "4",
  "price": "10"
}
### Execute with bad ticker params
POST http://localhost:9002/execute/AAFL/Cat4Life/Cat3Life
Content-Type: application/json

{
  "ticker": "AAF",
  "seller": "Cat4Life",
  "buyer": "Cat3Life",
  "buy_order_guid": "1851aeae-dba9-49f9-a917-4144797c9633",
  "sell_order_guid": "a68b4e2f-6680-4421-9204-ca6b55d008da",
  "quantity": "4",
  "price": "10"
}

### Execute with bad  price
POST http://localhost:9002/execute/AAFL/Cat4Life/Cat3Life
Content-Type: application/json

{
  "ticker": "AAFL",
  "seller": "Cat4Life",
  "buyer": "Cat3Life",
  "buy_order_guid": "1851aeae-dba9-49f9-a917-4144797c9633",
  "sell_order_guid": "a68b4e2f-6680-4421-9204-ca6b55d008da",
  "quantity": "4",
  "price": "-5"
}

### Execute with bad quantity params
POST http://localhost:9002/execute/AAFL/Cat4Life/Cat3Life
Content-Type: application/json

{
  "ticker": "AAFL",
  "seller": "Cat4Life",
  "buyer": "Cat3Life",
  "buy_order_guid": "1851aeae-dba9-49f9-a917-4144797c9633",
  "sell_order_guid": "a68b4e2f-6680-4421-9204-ca6b55d008da",
  "quantity": "-5",
  "price": "10"
}